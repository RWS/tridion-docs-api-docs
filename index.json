{
  "README.html": {
    "href": "README.html",
    "title": "Tridion Docs API Docs",
    "summary": "Tridion Docs API Docs What is it? This the main repository for the Tridion Docs Public API documentation. Can I contribute? Anyone is welcome to contribute to the public Tridion Docs API documentation by making a pull request into the master repository. The documentation is split into the following sections: Articles This section hosts a series of usefull article on: how to get started with writing plug-ins for Tridion Docs how to best use the public APIs how to troubleshoot common issues API Concepts This section hosts the main guidelines on using the Public API along with the API References Getting started with your contribution The documentation is built using a static documentation generator called DocFX. The documentation content is saved in Markdown files and then built into a website using DocFX. The table of content is saved into separate toc.yml files. In order for you to make a contribution directly please follow the next steps: Create a local branch from the main repository Add your changes by modifying existing Markdown files or by adding new Markdown files Adding new files will require updating the toc.yml files. Use the guideline provided by DocFX to learn more. You can use tools such as Notepad++ or Visual Studio Code to edit the content Create a Pull Request with your changes. This pull request will be reviewed for correctness by one of our technical writers Once your pull request has been approved and committed into the main branch, an automatic pipeline will be triggered which will push your changes to the live documentation site if you wish to test your changes locally you can follow the DOCFX Installation guideline and build the entire solution locally Our documentation automatically fills in the product name and other details so you don't have to make the changes manually if we decide to update the product name. Use the 'var:VariableName' construct to tell our documentation engine to fill in the info for you. Here are the constructs available at this point: var:ProductName - The product name, for example Tridion Docs var:ProductNameWithEdition - The official product release name including the edition, for example 'Tridion Docs 2021'"
  },
  "apiconcepts/Tridion_Docs_14SP3/overview.html": {
    "href": "apiconcepts/Tridion_Docs_14SP3/overview.html",
    "title": "Tridion Docs 14 SP3 API Documentation",
    "summary": "Tridion Docs 14 SP3 API Documentation Content Manager API This section contains information for developers to develop applications on top of the Content Manager web services API. Only described API classes and functions are supported and can be used. Do not use any other API function because they are subject to change. PowerShell modules ISHDeploy ISHDeploy is a PowerShell module that enables the code-as-configuration concept for Tridion Docs, starting from version 13.0.0, up to and including 15.1.0. ISHRemote ISHRemote is a PowerShell module on top of Tridion Docs Content Manager. Its goal is business automation on top of the Component Content Management System. ISHServer ISHServer is a PowerShell module to help automate installation of prerequisites for Tridion Docs ISHBootstrap ISHBootstrap is a bootstrapper for deployments of Tridion Docs Content Manager Tridion DXA This section is intended for developers wanting to extend DXA functionality using it's open-source .NET and Java APIs. Customizing and extending DXA Development prerequisites Developing custom Tridion Sites web applications/sites requires a full development environment. The necessary third-party software differs depending on whether you are developing a .NET or Java application. .NET web application development Set up a .NET development environment to customize or extend the DXA .NET web application. Java web application development Set up a Java development environment to customize or extend the DXA Java web application. Using RWS's public APIs Use the available public APIs to extend and customize the behavior DXA. Creating the folder structure for a custom module A custom module implements a distinct piece of functionality that is only relevant to some implementations. When you want to add a module to RWS Digital Experience Accelerator, you need to create a folder structure in Content Manager. Model mapping and semantics Domain (Content Manager) Models are mapped to the Presentation (View) Models using Model Semantics so that web developers can work with data structures optimized for the Views they are creating without having to have a deep understanding of the underlying content model. API reference documentation downloads Links to download the API reference documentation for RWS Digital Experience Accelerator. DXA API for .NET DXA API for Java Content Delivery's Public Content API"
  },
  "apiconcepts/Tridion_Docs_14SP4/overview.html": {
    "href": "apiconcepts/Tridion_Docs_14SP4/overview.html",
    "title": "Tridion Docs API Documentation",
    "summary": "Tridion Docs API Documentation Content Manager API This section contains information for developers to develop applications on top of the Content Manager web services API. Only described API classes and functions are supported and can be used. Do not use any other API function because they are subject to change. PowerShell modules ISHDeploy ISHDeploy is a PowerShell module that enables the code-as-configuration concept for Tridion Docs, starting from version 13.0.0, up to and including 15.1.0. ISHRemote ISHRemote is a PowerShell module on top of Tridion Docs Content Manager. Its goal is business automation on top of the Component Content Management System. ISHServer ISHServer is a PowerShell module to help automate installation of prerequisites for Tridion Docs ISHBootstrap ISHBootstrap is a bootstrapper for deployments of Tridion Docs Content Manager Tridion DXA This section is intended for developers wanting to extend DXA functionality using it's open-source .NET and Java APIs. Customizing and extending DXA Development prerequisites Developing custom Tridion Sites web applications/sites requires a full development environment. The necessary third-party software differs depending on whether you are developing a .NET or Java application. .NET web application development Set up a .NET development environment to customize or extend the DXA .NET web application. Java web application development Set up a Java development environment to customize or extend the DXA Java web application. Using RWS's public APIs Use the available public APIs to extend and customize the behavior DXA. Creating the folder structure for a custom module A custom module implements a distinct piece of functionality that is only relevant to some implementations. When you want to add a module to RWS Digital Experience Accelerator, you need to create a folder structure in Content Manager. Model mapping and semantics Domain (Content Manager) Models are mapped to the Presentation (View) Models using Model Semantics so that web developers can work with data structures optimized for the Views they are creating without having to have a deep understanding of the underlying content model. API reference documentation downloads Links to download the API reference documentation for RWS Digital Experience Accelerator. DXA API for .NET DXA API for Java Content Delivery's Public Content API"
  },
  "apiconcepts/Tridion_Docs_15.1/overview.html": {
    "href": "apiconcepts/Tridion_Docs_15.1/overview.html",
    "title": "Tridion Docs API Documentation",
    "summary": "Tridion Docs API Documentation Content Manager Web Services API This section contains information for developers to develop applications on top of the Content Manager Web Services API. You can only use the API classes and functions that are available from this page. Any other API functions are subject to change and not supported externally, so you should not use them. To directly access the API specification for Tridion Docs OpenAPI, go here PowerShell modules ISHDeploy ISHDeploy is a PowerShell module that enables the code-as-configuration concept for Tridion Docs, starting from version 13.0.0, up to and including 15.1.0. ISHRemote ISHRemote is a PowerShell module on top of Tridion Docs Content Manager. Its goal is business automation on top of the Component Content Management System. ISHServer ISHServer is a PowerShell module to help automate installation of prerequisites for Tridion Docs. ISHBootstrap ISHBootstrap is a bootstrapper for deployments of Tridion Docs Content Manager. Tridion DXA This section is intended for developers wanting to extend DXA functionality using its open-source .NET and Java APIs. Customizing and extending DXA Development prerequisites Developing custom Tridion Sites web applications/sites requires a full development environment. The necessary third-party software differs depending on whether you are developing a .NET or Java application. .NET web application development Set up a .NET development environment to customize or extend the DXA .NET web application. Java web application development Set up a Java development environment to customize or extend the DXA Java web application. Using RWS's public APIs Use the available public APIs to extend and customize the behavior of DXA. Creating the folder structure for a custom module A custom module implements a distinct piece of functionality that is only relevant to some implementations. When you want to add a module to DXA, you need to create a folder structure in Content Manager. Model mapping and semantics Domain (Content Manager) Models are mapped to the Presentation (View) Models using Model Semantics so that web developers can work with data structures optimized for the Views they are creating without having to have a deep understanding of the underlying content model. API reference documentation downloads Links to download the API reference documentation for DXA. DXA API for .NET DXA API for Java Content Delivery's Public Content API"
  },
  "apiconcepts/Tridion_Docs_15.2/overview.html": {
    "href": "apiconcepts/Tridion_Docs_15.2/overview.html",
    "title": "Tridion Docs API Documentation",
    "summary": "Tridion Docs API Documentation Content Manager Web Services API This section contains information for developers to develop applications on top of the Content Manager Web Services API. You can only use the API classes and functions that are available from this page. Any other API functions are subject to change and not supported externally, so you should not use them. To directly access the API specification for Tridion Docs OpenAPI, go here. PowerShell modules ISHDeploy ISHDeploy is a PowerShell module that enables the code-as-configuration concept for Tridion Docs, starting from version 13.0.0, up to and including 15.1.0. ISHRemote ISHRemote is a PowerShell module on top of Tridion Docs Content Manager. Its goal is business automation on top of the Component Content Management System. ISHServer ISHServer is a PowerShell module to help automate installation of prerequisites for Tridion Docs. ISHBootstrap ISHBootstrap is a bootstrapper for deployments of Tridion Docs Content Manager. Tridion DXA This section is intended for developers wanting to extend DXA functionality using its open-source .NET and Java APIs. Customizing and extending DXA Development prerequisites Developing custom Tridion Sites web applications/sites requires a full development environment. The necessary third-party software differs depending on whether you are developing a .NET or Java application. .NET web application development Set up a .NET development environment to customize or extend the DXA .NET web application. Java web application development Set up a Java development environment to customize or extend the DXA Java web application. Using RWS's public APIs Use the available public APIs to extend and customize the behavior of DXA. Creating the folder structure for a custom module A custom module implements a distinct piece of functionality that is only relevant to some implementations. When you want to add a module to DXA, you need to create a folder structure in Content Manager. Model mapping and semantics Domain (Content Manager) Models are mapped to the Presentation (View) Models using Model Semantics so that web developers can work with data structures optimized for the Views they are creating without having to have a deep understanding of the underlying content model. API reference documentation downloads Links to download the API reference documentation for DXA. DXA API for .NET DXA API for Java Content Delivery's Public Content API"
  },
  "apiconcepts/Tridion_Docs_15/overview.html": {
    "href": "apiconcepts/Tridion_Docs_15/overview.html",
    "title": "Tridion Docs API Documentation",
    "summary": "Tridion Docs API Documentation Content Manager Web Services API This section contains information for developers to develop applications on top of the Content Manager Web Services API. You can only use the API classes and functions that are available from this page. Any other API functions are subject to change and not supported externally, so you should not use them. To directly access the API specification for Tridion Docs OpenAPI, go here PowerShell modules ISHDeploy ISHDeploy is a PowerShell module that enables the code-as-configuration concept for Tridion Docs, starting from version 13.0.0, up to and including 15.0.0. ISHRemote ISHRemote is a PowerShell module on top of Tridion Docs Content Manager. Its goal is business automation on top of the Component Content Management System. ISHServer ISHServer is a PowerShell module to help automate installation of prerequisites for Tridion Docs. ISHBootstrap ISHBootstrap is a bootstrapper for deployments of Tridion Docs Content Manager. Tridion DXA This section is intended for developers wanting to extend DXA functionality using its open-source .NET and Java APIs. Customizing and extending DXA Development prerequisites Developing custom Tridion Sites web applications/sites requires a full development environment. The necessary third-party software differs depending on whether you are developing a .NET or Java application. .NET web application development Set up a .NET development environment to customize or extend the DXA .NET web application. Java web application development Set up a Java development environment to customize or extend the DXA Java web application. Using RWS's public APIs Use the available public APIs to extend and customize the behavior of DXA. Creating the folder structure for a custom module A custom module implements a distinct piece of functionality that is only relevant to some implementations. When you want to add a module to DXA, you need to create a folder structure in Content Manager. Model mapping and semantics Domain (Content Manager) Models are mapped to the Presentation (View) Models using Model Semantics so that web developers can work with data structures optimized for the Views they are creating without having to have a deep understanding of the underlying content model. API reference documentation downloads Links to download the API reference documentation for DXA. DXA API for .NET DXA API for Java Content Delivery's Public Content API"
  },
  "apiconcepts/overview.html": {
    "href": "apiconcepts/overview.html",
    "title": "",
    "summary": "Learn more about Tridion Docs 15.2 APIs Learn more about the APIs and what you can achieve with them. Learn more about Tridion Docs 15.1 APIs Learn more about the APIs and what you can achieve with them. Learn more about Tridion Docs 15 APIs Learn more about the APIs and what you can achieve with them. Learn more about Tridion Docs 14SP4 APIs Learn more about the APIs and what you can achieve with them. Learn more about Tridion Docs 14SP3 APIs Learn more about the APIs and what you can achieve with them."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Welcome to the Tridion Docs API documentation.",
    "summary": "Welcome to the Tridion Docs API documentation. Here you’ll find all the information you need to get started developing against your own instance of Tridion Docs. Discover quick guides explaining how to build, develop and deploy your app, plus hints and tips to help you make the most of our APIs. Should you have any ideas as to how we can improve this documentation, any new topics you think we should include or hints and tips you would like to share with the developer community, please let us know. To let us know what your suggested improvements are you can do this by using the \"Improve this Doc\" link on the top right of every page. You will need your own github account for this because this action will create a fork of the repository in your account where you can make the changes and then submit a pull request for us to review and accept. Learn more about Tridion Docs 14SP4 APIs Learn more about the APIs and what you can achieve with them. Learn more about Tridion Docs 14SP3 APIs Learn more about the APIs and what you can achieve with them."
  },
  "getting-started.html": {
    "href": "getting-started.html",
    "title": "Getting Started",
    "summary": "Getting Started Add an introduction here using markdown."
  },
  "index.html": {
    "href": "index.html",
    "title": "Tridion Docs",
    "summary": "Welcome to the Tridion Docs developer documentation Here you’ll find all the information you need to get started developing against your own instance of Tridion Docs. Discover quick guides explaining how to build, develop and deploy your app, plus hints and tips to help you make the most of our APIs. Should you have any ideas as to how we can improve this documentation, any new topics you think we should include or hints and tips you would like to share with the developer community, please let us know. To let us know what your suggested improvements are you can do this by using the \"Improve this Doc\" link on the top right of every page. You will need your own github account for this because this action will create a fork of the repository in your account where you can make the changes and then submit a pull request for us to review and accept. Current release: Tridion Docs 15.2 Learn more about the Tridion Docs 15.2 APIs Learn more about the APIs and what you can achieve with them. Earlier releases Tridion Docs 15.1 Learn more about the Tridion Docs 15.1 APIs Learn more about the APIs and what you can achieve with them. Tridion Docs 15 Learn more about the Tridion Docs 15 APIs Learn more about the APIs and what you can achieve with them. Tridion Docs 14 SP4 Learn more about the Tridion Docs 14SP4 APIs Learn more about the APIs and what you can achieve with them. Tridion Docs 14 SP3 Learn more about the Tridion Docs 14SP3 APIs Learn more about the APIs and what you can achieve with them. Good luck and happy developing! RWS"
  }
}